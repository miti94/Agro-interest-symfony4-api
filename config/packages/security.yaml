security:
    encoders:
        App\Entity\User:
            algorithm: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
 #       in_memory: { memory: null }
        database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login_check
            stateless: false
            anonymous: true
            json_login:
                #Here authentication will happen (token generation)
                check_path: /api/login_check
                # Handle successful authentication
                success_handler: lexik_jwt_authentication.handler.authentication_success
                # Handle authentication failure (invalid credentials, no credentials, etc).
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

                # entry_point: lexik_jwt_authentication.jwt_token_authenticator

        main:
            pattern: ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
                # entry_point: App\Security\LoginAuthenticator

            # form_login:
            #     csrf_token_generator: security.csrf.token_manager
            logout:
                path: api_logout
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
#        - { path: ^/profile, roles: ROLE_USER }
#        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }




